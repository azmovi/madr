[project]
name = "mader"
version = "0.1.0"
description = ""
authors = [{ name = "azevedo", email = "azevedoantoniocicero@gmail.com" }]
readme = "README.md"
requires-python = ">=3.13"

dependencies = [
    "pydantic-settings>=2.3.3",
    "alembic>=1.13.1",
    "pyjwt>=2.8.0",
    "pwdlib[argon2]>=0.2.0",
    "sqlalchemy[asyncio]>=2.0.31",
    "psycopg[binary]>=3.1.19",
    "greenlet>=3.0.3",
    "httpx>=0.27.0",
    "pydantic>=2.11.3",
    "fastapi[standard]>=0.115.12",
    "opentelemetry-distro>=0.53b1",
]

[dependency-groups]
dev = [
    "pytest>=8.2.2",
    "pytest-asyncio>=0.23.7",
    "pytest-cov>=5.0.0",
    "pytest-faker>=2.0.0",
    "taskipy>=1.12.2",
    "ruff>=0.4.8",
    "testcontainers>=4.7.0",
    "faker>=26.0.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.5.1",
    "pip-review>=1.3.0",
]

[tool.ruff]
line-length = 79
extend-exclude = ["migrations"]

[tool.ruff.lint]
preview = true
select = ["I", "F", "E", "W", "PL", "PT"]

[tool.ruff.format]
preview = true
quote-style = "single"

[tool.pytest.ini_options]
pythonpath = "."
addopts = "-p no:warnings"

[tool.taskipy.tasks]
upgrade = "uv pip list | tail -n +3 | cut -d ' ' -f1 | xargs uv pip install --upgrade"
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev mader/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=mader -vv'
post_test = 'coverage html'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]
